image: registry.gitlab.com/inapinch/rigz/rigz-ci:0.0.8

include:
  - template: Jobs/SAST.gitlab-ci.yml

default:
  before_script:
    - echo 'TODO' # TODO - copy this git dir to .rigz/modules/rigzs before running, removes the need for caching it
  cache:
    paths:
      - target
      - .rigz # used when rigz cli is run (TODO)
      - runtime/.rigz # initialize will clone or check the folder path, speed up testing

variables:
  APK_CACHE_DIR: $CI_PROJECT_DIR/.cache/apk
  C_INCLUDE_PATH: "/usr/include"

stages:
  - test
  - publish

test:cargo:
  stage: test
  needs: []
  script:
    - cargo test --all

test:cargo:audit:
  stage: test
  needs: []
  script:
    - cargo audit

test:cargo:clippy:
  stage: test
  needs: []
  script:
    - cargo clippy

docker:publish:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [ "" ]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"

docker:publish:release:
  stage: publish
  needs: [docker:publish]
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [ "" ]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile.release"
      --destination "${DOCKER_REGISTRY}:${CI_COMMIT_TAG}"
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    DOCKER_REGISTRY: docker.io